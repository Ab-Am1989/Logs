input {
  beats {
    port => 5044
  }
}
filter {
  grok {
    match => { 
      "message" => [
      '%{IPORHOST:client_ip} - - \[%{HTTPDATE:timestamp}\] "(?:%{WORD:method} %{URIPATH:request_path}(?:%{URIPARAM:query_string})? HTTP/%{NUMBER:http_version})" %{NUMBER:status_code} %{NUMBER:response_size} "(?:%{URI:referrer}|-)" "%{DATA:user_agent}" "%{DATA:x_forwarded_for}"'
      ]
    }
  }

  # Optional: Convert status code and size to integers
  mutate {
    convert => {
      "status_code" => "integer"
      "response_size" => "integer"
    }
  }

  # Optional: Parse user agent
  useragent {
    source => "user_agent"
    target => "user_agent_details"
  }

  # Optional: Parse date into @timestamp
  date {
    match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
    target => "@timestamp"
  }
}

output {
  stdout { codec => rubydebug }
  elasticsearch {
    hosts => ["http://192.168.122.97:9200"]
    index => "logstash-%{+YYYY.MM.dd}"
    user => "${ES_USER}"
    password => "${ES_PASS}"
  }
}
